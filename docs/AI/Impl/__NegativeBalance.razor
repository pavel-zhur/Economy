<!-- Pages/NegativeBalance.razor -->
@page "/negative-balance"

@inject NegativeBalanceService NegativeBalanceService

<h3>Планы с отрицательным балансом и неподкрепленные транзакции</h3>

@if (negativeBalancePlans != null && unlinkedTransactions != null)
{
    <h4>Таблица планов с отрицательным балансом:</h4>
    <table class="table">
        <thead>
            <tr>
                <th>План</th>
                <th>Баланс</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var plan in negativeBalancePlans)
            {
                <tr>
                    <td>@plan.PlanName</td>
                    <td>@plan.Balance.ToString("C")</td>
                    <td>@plan.Description</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th>Итого</th>
                <th>@totalNegativeBalance.ToString("C")</th>
                <th></th>
            </tr>
        </tfoot>
    </table>

    <h4>Таблица неподкрепленных транзакций:</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Дата</th>
                <th>Категория</th>
                <th>Сумма</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in unlinkedTransactions)
            {
                <tr>
                    <td>@transaction.Date:yyyy-MM-dd</td>
                    <td>@transaction.Category</td>
                    <td>@transaction.Amount.ToString("C")</td>
                    <td>@transaction.Description</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th colspan="2">Итого</th>
                <th>@totalUnlinkedTransactionsAmount.ToString("C")</th>
                <th></th>
            </tr>
        </tfoot>
    </table>
}
else
{
    <p>Загрузка данных...</p>
}

@code {
    private List<NegativeBalancePlanItem> negativeBalancePlans;
    private decimal totalNegativeBalance;
    private List<UnlinkedTransactionItem> unlinkedTransactions;
    private decimal totalUnlinkedTransactionsAmount;

    protected override void OnInitialized()
    {
        negativeBalancePlans = NegativeBalanceService.GetNegativeBalancePlans();
        unlinkedTransactions = NegativeBalanceService.GetUnlinkedTransactions();
        totalNegativeBalance = NegativeBalanceService.GetTotalNegativeBalance();
        totalUnlinkedTransactionsAmount = NegativeBalanceService.GetTotalUnlinkedTransactionsAmount();
    }
}
