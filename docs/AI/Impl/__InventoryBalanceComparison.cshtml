<!-- Pages/InventoryBalanceComparison.razor -->

@page "/inventory-balance-comparison"

@inject InventoryBalanceComparisonService ComparisonService

<h3>Инвентаризация и соответствие баланса кошельков</h3>

@if (comparisonItems != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Дата инвентаризации</th>
                <th>Баланс по кошелькам</th>
                <th>Баланс по транзакциям</th>
                <th>Разница</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in comparisonItems)
            {
                <tr class="@(item.HasDeviation ? "table-warning" : "")">
                    <td>@item.InventoryDate:yyyy-MM-dd</td>
                    <td>@item.WalletBalance.ToString("C")</td>
                    <td>@item.TransactionBalance.ToString("C")</td>
                    <td>@(item.Difference >= 0 ? "+" : "")@item.Difference.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>

    <MudChart ChartType="ChartType.Line" @ref="chart">
        <MudChartSeries Name="Баланс по кошелькам" Data="@walletBalances" />
        <MudChartSeries Name="Баланс по транзакциям" Data="@transactionBalances" />
    </MudChart>
}
else
{
    <p>Загрузка данных...</p>
}

@code {
    private List<InventoryBalanceComparisonItem> comparisonItems;
    private List<string> labels;
    private double[] walletBalances;
    private double[] transactionBalances;

    protected override void OnInitialized()
    {
        comparisonItems = ComparisonService.GetInventoryBalanceComparisons();

        // Prepare data for the chart
        labels = comparisonItems.Select(i => i.InventoryDate.ToString("yyyy-MM-dd")).ToList();
        walletBalances = comparisonItems.Select(i => (double)i.WalletBalance).ToArray();
        transactionBalances = comparisonItems.Select(i => (double)i.TransactionBalance).ToArray();
    }

    private MudChart chart;

    // Additional code for the chart configuration if needed
}
