@page "/future-funds-distribution"

@inject FutureFundsDistributionService DistributionService

    <h3>Будущее распределение по фондам и накоплениям</h3>

    @if (distributionItems != null && planNames != null)
{
    <table class="table">
        <thead>
        <tr>
        <th>Период</th>
        @foreach (var planName in planNames)
    {
        <th>@planName</th>
    }
    <th>Минимум (цель)</th>
        <th>Точка цели</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in distributionItems)
    {
        <tr>
            <td>@item.Period</td>
            @foreach (var planName in planNames)
        {
            <td>@(item.PlanBalances.ContainsKey(planName) ? item.PlanBalances[planName].ToString("C") : "0")</td>
        }
        <td>@item.MinimumGoal.ToString("C")</td>
            <td>@item.GoalPoint.ToString("C")</td>
            </tr>
    }
    </tbody>
        </table>
}
else
{
    <p>Загрузка данных...</p>
}

@code {
private List<FutureFundsDistributionItem> distributionItems;
private List<string> planNames;

protected override void OnInitialized()
{
    var startDate = DateTime.Today;
    var numberOfPeriods = 3; // Next three months as in the example
    distributionItems = DistributionService.GetFutureFundsDistribution(startDate, numberOfPeriods);

    // Extract plan names from the first item
    planNames = distributionItems.SelectMany(i => i.PlanBalances.Keys).Distinct().ToList();
}
}