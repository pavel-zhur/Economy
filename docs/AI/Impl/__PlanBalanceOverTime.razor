<!-- Pages/PlanBalanceOverTime.razor -->

    @page "/plan-balance-over-time"

@using ViewModels
@using Services

@inject PlanBalanceOverTimeService BalanceService

    <h3>Баланс планов во времени</h3>

    @if (planBalanceData != null && planBalanceData.Any())
{
    <!-- Chart displaying plan balances over time -->
        <MudTabs>

        @foreach (var planName in planNames)
    {
        <MudTab Text="@planName">
            <MudChart ChartType="ChartType.Line">
            <MudChartSeries Name="@planName"
        Data="@GetPlanBalances(planName).Select(b => (double)b.Balance).ToArray()"
        Labels="@labels" />
            </MudChart>
            </MudTab>
    }

    </MudTabs>
}
else
{
    <p>Нет данных для отображения.</p>
}

@code {
private List<PlanBalanceOverTimeItem> planBalanceData;
private List<string> labels;
private List<string> planNames;

protected override void OnInitialized()
{
    planBalanceData = BalanceService.GetPlanBalancesOverTime();

    // Prepare distinct dates as labels
    labels = planBalanceData.Select(b => b.Date.ToString("dd.MM.yyyy"))
        .Distinct()
        .OrderBy(date => DateTime.ParseExact(date, "dd.MM.yyyy", null))
        .ToList();

    // Get distinct plan names
    planNames = planBalanceData.Select(b => b.PlanName).Distinct().ToList();
}

private IEnumerable<PlanBalanceOverTimeItem> GetPlanBalances(string planName)
{
    return planBalanceData
        .Where(b => b.PlanName == planName)
        .OrderBy(b => b.Date);
}
}