@page
@using Economy.Engine
@using Economy.Memory.Containers.State
@model Economy.Web.Pages.OverviewModel
@inject StateFactory<State> StateFactory

@{
    ViewData["Title"] = "Overview";
    var state = await StateFactory.GetState();
}
<h1>@ViewData["Title"]</h1>

<h3>Events</h3>
@foreach (var entity in state.Repositories.Events.GetAll().OrderBy(x => x.Id))
{
    <p>
        @entity.ToDetails(state.Repositories)
    </p>
}

<h3>Wallet Audits</h3>
@foreach (var entity in state.Repositories.WalletAudits.GetAll().OrderBy(x => x.Id))
{
    <p>
        @entity.ToDetails(state.Repositories)
    </p>
}

<h3>Plans</h3>
@foreach (var entity in state.Repositories.Plans.GetAll().OrderBy(x => x.Id))
{
    <p>
        @entity.ToDetails(state.Repositories)
    </p>
}

<h3>Transactions</h3>
@foreach (var entity in state.Repositories.Transactions.GetAll().OrderBy(x => x.Id))
{
    <p>
        @entity.ToDetails(state.Repositories)
    </p>
}

<h3>Conversions</h3>
@foreach (var entity in state.Repositories.Conversions.GetAll().OrderBy(x => x.Id))
{
    <p>
        @entity.ToDetails(state.Repositories)
    </p>
}

<h3>Transfers</h3>
@foreach (var entity in state.Repositories.Transfers.GetAll().OrderBy(x => x.Id))
{
    <p>
        @entity.ToDetails(state.Repositories)
    </p>
}
