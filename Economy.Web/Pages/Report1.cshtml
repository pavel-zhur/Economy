@page
@using OneShelf.Common
@using Economy.Memory.Tools
@model Economy.Web.Pages.Report1Model
@{
    ViewData["Title"] = "Report 1";
    var repositories = Model.State.Repositories;
}

<form method="get" class="mb-4">
    <div class="d-flex justify-content-start flex-wrap">
        <div class="form-group me-3">
            <label for="from">From</label>
            <input type="date" class="form-control" id="from" name="from" value="@Model.From?.ToString("yyyy-MM-dd")" />
        </div>
        <div class="form-group me-3">
            <label for="to">To</label>
            <input type="date" class="form-control" id="to" name="to" value="@Model.To?.ToString("yyyy-MM-dd")" />
        </div>
        <div class="form-group">
            <label for="weekStart">Week Start</label>
            <select class="form-control" id="weekStart" name="weekStart">
                @foreach (var day in Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>())
                {
                    <option value="@day" selected="@(day == Model.WeekStart)">@day</option>
                }
            </select>
        </div>
    </div>
    <button type="submit" class="btn btn-primary mt-2">View</button>
</form>

<style>
    .table-fixed-header {
    }

        .table-fixed-header thead th {
            position: sticky;
            top: 0;
            background-color: white;
            z-index: 1;
        }

        .table-fixed-header th, .table-fixed-header td {
            border-right: 1px solid #dee2e6; /* Add vertical column separator lines */
        }

            .table-fixed-header th:last-child, .table-fixed-header td:last-child {
                border-right: none; /* Remove the border from the last column */
            }


        .table-fixed-header tr.top-border td {
            border-top: 2px solid #53a0ec;
    }
    </style>

<div class="table-responsive table-fixed-header overflow-visible">
    <table class="table table-sm">
        <thead>
            <tr>
                <th style="width: 15%;">Date</th>
                <th style="width: 15%;">Planned</th>
                <th style="width: 15%;">Actual</th>
                <th style="width: 25%;">Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (row, isFirst, isLast) in Model.Rows.WithIsFirstLast())
            {
                <tr class="@(row.Date.ToDateTime().DayOfWeek == Model.WeekStart ? "top-border" : null)">
                    <td>@row.Date.SelectSingle(x => isFirst ? $"<= {x}" : isLast ? $">= {x}" : $"{x}, {x.ToDateTime().DayOfWeek.ToString()[..3]}")</td>
                    <td>
                        @foreach (var (transaction, amount) in row.PlannedIncomes)
                        {
                            <div>📈@amount.ToDetails(repositories)</div>
                        }
                        @foreach (var (transaction, amount) in row.PlannedExpenses)
                        {
                            <div>📉@amount.ToDetails(repositories)</div>
                        }
                    </td>
                    <td>
                        @foreach (var (transaction, entry, amount) in row.ActualIncomes)
                        {
                            <div>📈@amount.ToDetails(repositories)</div>
                        }
                        @foreach (var (transaction, entry, amount) in row.ActualExpenses)
                        {
                            <div>📉@amount.ToDetails(repositories)</div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>