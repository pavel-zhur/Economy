@using Economy.Engine.Models
@model IReadOnlyList<Economy.Engine.Models.ChatModel>

<input type="hidden" id="default-chat-id" value="@Model.SingleOrDefault(x => !x.Messages.Any())?.ChatId" />
@foreach (var chat in Model)
{
    <div id="chat-@chat.ChatId" class="chat">
        <h3>Chat @chat.ChatId</h3>
        <h4>Chat @chat.Status</h4>
        <ul id="messagesList-@chat.ChatId">
            @foreach (var message in chat.Messages)
            {
                <li id="message-@message.MessageId">
                    @if (message.Type == MessageType.UserText)
                    {
                        <span><strong>You:</strong> @message.Text - <em>@message.Status</em></span>
                    }
                    else if (message.Type == MessageType.UserVoice)
                    {
                        <span><strong>You (Audio):</strong> Transcription - @message.Text - <em>@message.Status</em></span>
                    }
                    else if (message.Type == MessageType.ServerText)
                    {
                        <span><strong>Server:</strong> @message.Text</span>
                    }
                    else if (message.Type == MessageType.SystemText)
                    {
                        <span class="system-message">[@message.SystemMessageSeverity] @message.Text</span>
                    }
                    else if (message.Type == MessageType.ActionLog)
                    {
                        @message.Text
                    }
                    else
                    {
                        <span>Unknown message type</span>
                    }

                    @if (message.Type is MessageType.UserText or MessageType.UserVoice && message.Status == UserMessageStatus.Thinking)
                    {
                        <button onclick="window.chatsComponent.tryCancelMessage('@chat.ChatId', '@message.MessageId')">Cancel</button>
                    }
                </li>
            }
        </ul>

        @{
            var enabled = chat.Status is ChatStatus.Ready or ChatStatus.Success or ChatStatus.Error;
        }

        <form onsubmit="window.chatsComponent.sendMessage('@chat.ChatId'); return false;">
            <input type="text" id="messageInput-@chat.ChatId" class="messageInput" disabled="@(!enabled)" placeholder="Type a message..." />
            <button type="submit" id="sendButton-@chat.ChatId" class="sendButton" disabled="@(!enabled)">Send</button>
        </form>
        
        @if (chat.Messages.Any())
        {
            <button onclick="window.chatsComponent.closeChat('@chat.ChatId')">Close Chat</button>
        }
    </div>
}